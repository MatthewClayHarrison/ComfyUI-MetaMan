# Civitai Output Template
# Defines how to format metadata for Civitai compatibility

service_name: "civitai"
output_format: "parameters_text_plus"
description: "Template for generating Civitai-compatible metadata with enhanced model tracking"

# Civitai extends A1111 format with additional metadata
base_template: "automatic1111"
extensions:
  - "enhanced_model_tracking"
  - "civitai_resources"
  - "generation_metadata"

# Standard A1111 parameters format
format_template: |
  {prompt}
  {negative_prompt_line}
  {parameters_line}

# Enhanced parameter processing for Civitai
parameter_extensions:
  # Model information with Civitai-specific details
  model_civitai_id:
    format: "Model ID: {value}"
    type: "integer"
    condition: "value is not None"
    
  model_version_id:
    format: "Version ID: {value}"
    type: "integer"
    condition: "value is not None"
    
  # Resource tracking
  resources_used:
    format: "Resources: {value}"
    type: "json_compact"
    condition: "value is not None"

# Civitai-specific resource tracking
resource_tracking:
  enabled: true
  include_hashes: true
  include_urls: true
  include_civitai_ids: true
  
  # Resource format
  resource_format:
    type: "array"
    item_structure:
      name: "string"
      type: "string"  # checkpoint, lora, embedding
      hash: "string"  # SHA256
      civitai_id: "integer"
      version_id: "integer"
      download_url: "string"
      weight: "float"  # for LoRAs

# Enhanced LoRA handling for Civitai
lora_extensions:
  include_metadata: true
  format_in_prompt: true
  track_separately: true
  
  # LoRA metadata structure
  metadata_fields:
    - "civitai_id"
    - "version_id" 
    - "hash"
    - "download_url"
    - "weight"
    - "trigger_words"

# PNG chunk configuration for Civitai
png_chunks:
  # Standard parameters chunk
  parameters:
    chunk_name: "parameters"
    encoding: "latin-1"
    fallback_encoding: "utf-8"
    compress: false
    
  # Proposed Civitai-specific chunk
  civitai_metadata:
    chunk_name: "civt"
    encoding: "utf-8"
    compress: true
    format: "json"
    content:
      version: "1.0"
      type: "generation"
      data:
        prompt: "{prompt}"
        negative_prompt: "{negative_prompt}"
        steps: "{steps}"
        sampler: "{sampler}"
        cfg_scale: "{cfg_scale}"
        seed: "{seed}"
        size: ["{width}", "{height}"]
        model:
          name: "{model_name}"
          hash: "{model_hash}"
          civitai_id: "{model_civitai_id}"
          version_id: "{model_version_id}"
        resources: "{resources_array}"
        created_at: "{creation_time}"

# Civitai API integration hints
api_integration:
  model_search_endpoint: "https://civitai.com/api/v1/models"
  model_versions_endpoint: "https://civitai.com/api/v1/models/{model_id}/versions"
  download_endpoint: "https://civitai.com/api/download/models/{version_id}"
  
  # Search parameters
  search_params:
    - "query"
    - "tag"
    - "type"
    - "sort"
    - "period"
    - "rating"
    - "nsfw"

# Dependency resolution
dependency_resolution:
  priority: 1  # Highest priority for model lookups
  search_methods:
    - "exact_hash_match"
    - "name_and_hash"
    - "name_similarity"
    - "tag_matching"
  
  confidence_thresholds:
    exact_hash: 1.0
    name_and_hash: 0.9
    name_similarity: 0.7
    tag_matching: 0.5

# Enhanced parameter order for Civitai
parameter_order:
  - "steps"
  - "sampler"
  - "cfg_scale" 
  - "seed"
  - "size"
  - "model_hash"
  - "model"
  - "model_civitai_id"
  - "model_version_id"
  - "clip_skip"
  - "denoising_strength"
  - "resources_used"

# Validation rules specific to Civitai
validation:
  required_fields: ["prompt"]
  recommended_fields: ["model_hash", "seed", "steps", "cfg_scale"]
  resource_validation: true
  hash_format_check: true
  civitai_id_validation: false  # Optional but recommended
