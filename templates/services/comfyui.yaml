# ComfyUI Output Template
# Defines how to format metadata for ComfyUI compatibility

service_name: "comfyui"
output_format: "json"
description: "Template for generating ComfyUI-compatible workflow and prompt data"

# Primary output formats
output_types:
  workflow:
    chunk_name: "workflow"
    description: "Complete ComfyUI workflow graph"
    priority: 1
    
  prompt:
    chunk_name: "prompt"
    description: "ComfyUI execution prompt data"
    priority: 2
    
  parameters:
    chunk_name: "parameters"
    description: "A1111-compatible fallback"
    priority: 3

# Workflow generation rules
workflow_generation:
  preserve_original: true
  fallback_to_basic: true
  
  # Basic workflow template when original is not available
  basic_workflow_template:
    nodes:
      - id: 1
        type: "CheckpointLoaderSimple"
        inputs:
          ckpt_name: "{model_name}"
        outputs: ["MODEL", "CLIP", "VAE"]
        
      - id: 2
        type: "CLIPTextEncode"
        inputs:
          text: "{prompt}"
          clip: ["1", "CLIP"]
        outputs: ["CONDITIONING"]
        
      - id: 3
        type: "CLIPTextEncode"
        inputs:
          text: "{negative_prompt}"
          clip: ["1", "CLIP"]
        outputs: ["CONDITIONING"]
        
      - id: 4
        type: "EmptyLatentImage"
        inputs:
          width: "{width}"
          height: "{height}"
          batch_size: "{batch_size}"
        outputs: ["LATENT"]
        
      - id: 5
        type: "KSampler"
        inputs:
          seed: "{seed}"
          steps: "{steps}"
          cfg: "{cfg_scale}"
          sampler_name: "{sampler}"
          scheduler: "{scheduler}"
          denoise: "{denoising_strength}"
          model: ["1", "MODEL"]
          positive: ["2", "CONDITIONING"]
          negative: ["3", "CONDITIONING"]
          latent_image: ["4", "LATENT"]
        outputs: ["LATENT"]
        
      - id: 6
        type: "VAEDecode"
        inputs:
          samples: ["5", "LATENT"]
          vae: ["1", "VAE"]
        outputs: ["IMAGE"]
        
      - id: 7
        type: "SaveImage"
        inputs:
          images: ["6", "IMAGE"]
          filename_prefix: "ComfyUI"

# Field mapping for ComfyUI nodes
field_mappings:
  sampler:
    node_type: "KSampler"
    field: "sampler_name"
    mapping_source: "comfyui"
    
  scheduler:
    node_type: "KSampler"
    field: "scheduler"
    default: "normal"
    
  steps:
    node_type: "KSampler"
    field: "steps"
    type: "integer"
    
  cfg_scale:
    node_type: "KSampler"
    field: "cfg"
    type: "float"
    
  seed:
    node_type: "KSampler"
    field: "seed"
    type: "integer"
    
  denoising_strength:
    node_type: "KSampler"
    field: "denoise"
    type: "float"
    default: 1.0
    
  width:
    node_type: "EmptyLatentImage"
    field: "width"
    type: "integer"
    
  height:
    node_type: "EmptyLatentImage"
    field: "height"
    type: "integer"
    
  batch_size:
    node_type: "EmptyLatentImage"
    field: "batch_size"
    type: "integer"
    default: 1
    
  model_name:
    node_type: "CheckpointLoaderSimple"
    field: "ckpt_name"
    type: "string"
    
  prompt:
    node_type: "CLIPTextEncode"
    field: "text"
    type: "string"
    target_node: "positive"
    
  negative_prompt:
    node_type: "CLIPTextEncode"
    field: "text"
    type: "string"
    target_node: "negative"

# LoRA integration
lora_handling:
  node_type: "LoraLoader"
  inputs:
    model: ["previous_model", "MODEL"]
    clip: ["previous_clip", "CLIP"]
    lora_name: "{name}"
    strength_model: "{weight}"
    strength_clip: "{weight}"
  outputs: ["MODEL", "CLIP"]
  
  # Integration with main workflow
  insert_after: "CheckpointLoaderSimple"
  chain_multiple: true

# Prompt format for ComfyUI execution
prompt_format:
  structure: "object"
  fields:
    client_id: 
      type: "string"
      default: "metaman"
      
    prompt:
      type: "object"
      description: "Node execution data"
      
    extra_data:
      type: "object"
      fields:
        extra_pnginfo:
          workflow: "{workflow_data}"
          
# PNG chunk configuration
png_chunks:
  workflow:
    chunk_name: "workflow"
    encoding: "utf-8"
    compress: true
    format: "json"
    
  prompt:
    chunk_name: "prompt"
    encoding: "utf-8"
    compress: false
    format: "json"
    
  parameters:
    chunk_name: "parameters"
    encoding: "latin-1"
    fallback_encoding: "utf-8"
    format: "a1111_text"
    fallback_only: true

# ComfyUI-specific sampler mappings
samplers:
  euler: "euler"
  euler_a: "euler_ancestral"
  heun: "heun"
  dpm_2: "dpm_2"
  dpm_2_ancestral: "dpm_2_ancestral"
  lms: "lms"
  ddim: "ddim"
  uni_pc: "uni_pc"
  dpmpp_2s_ancestral: "dpmpp_2s_ancestral"
  dpmpp_2m: "dpmpp_2m"
  dpmpp_sde: "dpmpp_sde"
  dpmpp_2m_karras: "dpmpp_2m"
  dpmpp_sde_karras: "dpmpp_sde"

schedulers:
  normal: "normal"
  karras: "karras"
  exponential: "exponential"
  sgm_uniform: "sgm_uniform"
  simple: "simple"
  ddim_uniform: "ddim_uniform"

# Validation rules
validation:
  workflow_structure: true
  node_connectivity: true
  required_outputs: ["IMAGE"]
  max_nodes: 1000
