# Tensor.AI Output Template
# Defines how to format metadata for Tensor.AI compatibility

service_name: "tensor.ai"
output_format: "json"
description: "Template for generating Tensor.AI-compatible metadata"

# Tensor.AI uses JSON-based metadata format
format_template: "json"

# Tensor.AI specific field structure
field_structure:
  prompt:
    required: true
    type: "string"
    max_length: 2000
    
  negative_prompt:
    required: false
    type: "string"
    max_length: 1000
    field_name: "negative_prompt"
    
  steps:
    required: false
    type: "integer"
    range: [10, 100]
    default: 25
    field_name: "num_inference_steps"
    
  cfg_scale:
    required: false
    type: "float"
    range: [1.0, 20.0]
    default: 7.5
    field_name: "guidance_scale"
    
  width:
    required: false
    type: "integer"
    options: [512, 768, 1024]
    default: 512
    
  height:
    required: false
    type: "integer"
    options: [512, 768, 1024]
    default: 512
    
  seed:
    required: false
    type: "integer"
    range: [0, 2147483647]
    
  sampler:
    required: false
    type: "string"
    options: ["DDIM", "PLMS", "K_EULER", "K_EULER_ANCESTRAL", "K_HEUN", "K_DPM_2", "K_DPM_2_ANCESTRAL"]
    default: "K_EULER"
    field_name: "scheduler"

# Tensor.AI specific fields
tensor_ai_fields:
  style:
    type: "string"
    description: "Tensor.AI style preset"
    field_name: "tensor_ai_style"
    options:
      - "photorealistic"
      - "artistic" 
      - "anime"
      - "abstract"
      - "landscape"
      - "portrait"
      - "fantasy"
      - "sci-fi"
      
  quality:
    type: "string"
    description: "Output quality setting"
    options: ["draft", "standard", "high", "ultra"]
    default: "standard"
    
  enhance_face:
    type: "boolean"
    description: "Enable face enhancement"
    default: false
    
  enhance_details:
    type: "boolean"
    description: "Enable detail enhancement"
    default: false

# Model handling for Tensor.AI
model_handling:
  model_field: "model_id"
  supported_models:
    - "stable-diffusion-v1-5"
    - "stable-diffusion-v2-1"
    - "stable-diffusion-xl"
    - "tensor-art-v1"
    - "tensor-art-v2"
  
  # Model mapping from other services
  model_mapping:
    "sd_v1_5": "stable-diffusion-v1-5"
    "sd_v2_1": "stable-diffusion-v2-1"
    "sdxl": "stable-diffusion-xl"

# JSON output structure
json_structure:
  generation_params:
    prompt: "{prompt}"
    negative_prompt: "{negative_prompt}"
    num_inference_steps: "{steps}"
    guidance_scale: "{cfg_scale}"
    width: "{width}"
    height: "{height}"
    seed: "{seed}"
    scheduler: "{sampler}"
    
  tensor_ai_params:
    style: "{tensor_ai_style}"
    quality: "{quality}"
    enhance_face: "{enhance_face}"
    enhance_details: "{enhance_details}"
    model_id: "{model_name}"
    
  metadata:
    source_service: "tensor.ai"
    created_at: "{creation_time}"
    version: "1.0"

# PNG chunk configuration
png_chunk:
  chunk_name: "TensorAI"
  encoding: "utf-8"
  compress: true
  format: "json"

# Sampler mapping for Tensor.AI
sampler_mapping:
  from_universal:
    euler: "K_EULER"
    euler_a: "K_EULER_ANCESTRAL"
    heun: "K_HEUN"
    dpm_2: "K_DPM_2"
    dpm_2_a: "K_DPM_2_ANCESTRAL"
    ddim: "DDIM"
    plms: "PLMS"
  
  to_universal:
    "K_EULER": "euler"
    "K_EULER_ANCESTRAL": "euler_a"
    "K_HEUN": "heun"
    "K_DPM_2": "dpm_2"
    "K_DPM_2_ANCESTRAL": "dpm_2_a"
    "DDIM": "ddim"
    "PLMS": "plms"

# Validation rules
validation:
  required_fields: ["prompt"]
  field_constraints: true
  model_compatibility: true
  style_validation: true
  
# API integration (placeholder for future implementation)
api_integration:
  base_url: "https://api.tensor.art"
  endpoints:
    generate: "/v1/generate"
    models: "/v1/models"
    styles: "/v1/styles"
